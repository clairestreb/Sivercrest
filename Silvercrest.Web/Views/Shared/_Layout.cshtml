@using Silvercrest.Web.Common
@{    
    Layout = "~/Views/Shared/_LayoutBase.cshtml";
}

<header class="wrapper">
    <div class="container main-header">
        @*<img src="~/img/logo.png" alt="">*@
       
        <div class="user hidden-xs">
            Welcome,&nbsp;<em id="fullnameDesk">@Model.contactFullName</em><br />
            <a id="userSettings" href="#" onclick="goToUserSettings()">Account Settings</a><br />
            @using Microsoft.AspNet.Identity
            @if (Request.IsAuthenticated)
            {
                using (Html.BeginForm("LogOff", "Account", new { area = "" }, FormMethod.Post, new { id = "logoutForm" }))
                {
                    @Html.AntiForgeryToken()
                    <a  id="logout2" href="javascript:document.getElementById('logoutForm').submit()">Log Out</a>
                }
            }
        </div>
    </div>
</header>

<nav class="navbar navbar-default visible-xs wrapper" role="navigation">
    <div class="container">
        <div class="row">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle collapsed nav-button" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                    <span class="sr-only"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <span class="navbar-brand">Welcome,&nbsp;</span><span id="fullnameMob" href="" class="navbar-brand">@Model.contactFullName</span>
            </div>
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
             @if (Request.Cookies["IsSecondaryClient"].Value != "true")
             {
                    <li><a href="#" onclick="goTo('Home');return false;"                >Home</a></li>                   
                    <li><a href="#" onclick="goTo('Holdings/ViewAccount');return false;">Holdings</a></li>
                    <li><a href="#" onclick="goTo('Transactions');return false;"        >Transactions</a></li>
             }
                    <li><a href="#" onclick="goTo('Team');return false;"                >Team   </a></li>
                    <li><a href="#" onclick="goTo('Documents');return false;"           >Documents</a></li>
                    <li><a href="#" onclick="goToUserSettings()"> Account Settings</a></li>
                    <li><a id="logout1" href="javascript:document.getElementById('logoutForm').submit()">Log Out</a></li>
                </ul>
            </div>
        </div>
    </div>
</nav>
<div class = "desktop hidden-xs wrapper">
<nav class="desktop hidden-xs wrapper" id="navbar-desctop" css>
    <div class="container nav-tablet">
        <div class="row" id="navigatino-item-active">
            <ul class="nav navbar-nav menu-flex">                
            @if (Request.Cookies["IsSecondaryClient"].Value != "true")
            {
                        <li><a href="#" onclick="goTo('Home');return false;">Home</a></li>
                        <li><a href="#" onclick="goTo('Holdings/ViewAccount');return false;">Holdings</a></li>               
                        <li><a href="#" onclick="goTo('Transactions');return false;">Transactions</a></li>
            }
                        <li><a href="#" onclick="goTo('Team');return false;">Team</a></li>
                        <li><a href="#" onclick="goTo('Documents');return false;">Documents</a></li>        
            </ul>
        </div>
    </div>
</nav>
</div>
<div class="wrapper">
    @RenderBody()
</div>
<script type="text/javascript">
   //for IE support of includes()
    if (!String.prototype.includes) {
        String.prototype.includes = function (search, start) {
            'use strict';
            if (typeof start !== 'number') {
                start = 0;
            }
            if (start + search.length > this.length) {
                return false;
            } else {
                return this.indexOf(search, start) !== -1;
            }
        };
    }
/*
    $.ajax({
        url: "/Account/GetNameIfClientView",
        type: "get",
        data: {
            contactIdQuery: getUrlParam("contactIdQuery"),
        },
        success: function (response) {
            
            if (!$("#fullnameMob").text().includes(response)) {
                $("#fullnameMob").text(response);
                $("#fullnameDesk").text(response);
                $("#logout1").empty();
                $("#logout2").empty();
                $("#fullnameMob").attr("id", "newId");
                $("#fullnameDesk").attr("id", "newId1");
            }
        },
        error: function (response) {
            console.log("error" + response);
        }
    });

    $.ajax({
        url: "/Account/GetNameIfClientView",
        type: "get",
        data: {
            contactIdQuery: getUrlParam("contactIdQuery"),
        },
        success: function (response) {
            if (!$("#fullnameMob").text().includes(response)) {
                $("#fullnameMob").text(response);
                $("#fullnameDesk").text(response);
                $("#logout1").empty();
                $("#logout2").empty();
                $("#fullnameMob").attr("id", "newId");
                $("#fullnameDesk").attr("id", "newId1");
            }
        },
        error: function (response) {
            console.log("error" + response);
        }
    });
*/
    function getCookie(name) {
        var value = "; " + document.cookie;
        var parts = value.split("; " + name + "=");
        if (parts.length == 2) return parts.pop().split(";").shift();
    }

    function goTo(action) {
        var cI = getUrlParam("contactIdQuery");
        var eI = getUrlParam("entityIdQuery");
        var iG = getUrlParam("isGroupQuery");
        var iCG = getUrlParam("isClientGroupQuery");
        var gEI = getUrlParam("groupEntityIdQuery");
        var gICG = getUrlParam("groupIsClientGroupQuery");


//        alert(document.cookie);

        if (action.includes("Home")) {
            //Since Home Page needs the Group details in addition to the Account Detials, we need to set them all in cookies
            //Group details are to show which group is in display, Account details may be in addition to show the pie, other pie shows group
            //If the Entity is a group,then this means the group should now be changed
            window.location.replace("/Client/" + action + "?contactIdQuery=" + cI + "&groupEntityIdQuery=" + gEI
                + "&groupIsClientGroupQuery=" + gICG + "&entityIdQuery=" + eI + "&isGroupQuery=" + iG + "&isClientGroupQuery=" + iCG);
//            window.location = "/Client/" + action + "?contactId=" + getUrlParam("contactId");
            return;
        }
/*        var isGroup = getUrlParam("isGroup");
        var isClientGroup = getUrlParam("isClientGroup");
        var entityId = getUrlParam("entityId");
        var contactId =  getUrlParam("contactId");
        if (getUrlParam("entityId") == undefined) {
            isGroup = true;
            isClientGroup = false;
            entityId = -1;
        }

        if(contactId == undefined){
            contactId = getCookie("MainContactId");
        }
*/
        if (action.includes("Documents")) {
            window.location = "/Client/" + action + "?contactIdQuery=" + cI
            return;
        }
        window.location = "/Client/" + action + "?isGroupQuery=" + iG + "&isClientGroupQuery=" + iCG
            + "&contactIdQuery=" + cI + "&entityIdQuery=" + eI;
    }

    function getCookieValue(name) {
        cookieList = document.cookie.split('; ');
        cookies = {};
        for (i = cookieList.length - 1; i >= 0; i--) {
            cookie = cookieList[i].split('=');
            cookies[cookie[0]] = cookie[1];
        }
        return cookies[name];
    }

    function getUrlParam(variable) {
        var query = window.location.search.substring(1);
        var vars = query.split("&");
        for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split("=");
            if (pair[0] == variable) {
                return pair[1];
            }
        }
    }

    function goToUserSettings()
    {
        var clContactId = getUrlParam("contactIdQuery");

        var userSettingsUrl = '@Url.Action("Index", "UserSettings", new { Area = "Client", mainContactIdQuery = Hash.GetEncryptedValue(Request.Cookies["MainContactId"].Value), contactIdQuery = "clContactId" })';
        userSettingsUrl = userSettingsUrl.replace("clContactId", clContactId);

        var div = document.createElement('div');
        div.innerHTML = userSettingsUrl;
        var decoded = div.firstChild.nodeValue;

        location.href = decoded;
    }

</script>
@RenderSection("Script", required: false)

